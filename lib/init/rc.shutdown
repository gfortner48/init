#!/bin/sh
# shellcheck disable=1090,1091

# Shared code between boot/shutdown.
. /usr/lib/init/rc.lib

log "Loading rc.conf settings..."; {
    load_conf
}

log "Running shutdown pre hooks..."; {
    run_hook pre.shutdown
}

log "Waiting for services to stop..."; {
    : "${CONFIG_SERVICE_DIR:=/var/service}"

    case ${CONFIG_SERVICE:=runit} in
        runit)
            sv force-shutdown "$CONFIG_SERVICE_DIR/"*
        ;;

        s6)

            case $CONFIG_INIT in
                s6)
                    # If s6 is init s6-svscan will have already done its
                    # cleanup routine as it execs into this script.
                ;;

                *)
                    s6-svscanctl -t "$CONFIG_SERVICE_DIR"
                ;;
            esac
        ;;
    esac
}

log "Saving random seed..."; {
    random_seed save
}

log "Sending TERM signal to all processes..."; {
    kall 15
    sleep 2
}

log "Sending KILL signal to all processes..."; {
    kall 9
}

log "Unmounting filesystems and disabling swap..."; {
    swapoff -a

    # Skip unmounting pseudo filesystems as they may be needed below for
    # encryption and user shutdown scripts.
    #
    # The '-t' flag is a part of the LSB standard and is supported by busybox,
    # toybox, util-linux, FreeBSD, NetBSD, OpenBSD and others.
    #
    # This flag is unsupported by ubase and I consider this a ubase issue. ubase
    # only supports Linux and this flag is a part of the Linux standard base.
    umount -rat nosysfs,proc,devtmpfs,tmpfs
}

log "Remounting rootfs as read-only"; {
    mount -o remount,ro /
    sync
}

log "Running shutdown post hooks..."; {
    run_hook post.shutdown
}

case ${0##*/} in
    *reboot*)   kpow r ;;
    *poweroff*) kpow p ;;
    *shutdown*) kpow s ;;
esac
